{"version":3,"sources":["mina-countdown.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["var __TEMP__ = require('tiny-timer');var Timer = __REQUIRE_DEFAULT__(__TEMP__);\n\nconst DEFAULT_OPTIONS = {\n  tick: function () {},\n  done: function () {},\n  statusChanged: function () {},\n};\n\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });class Countdown {\n  constructor(_page, name, option = {}) {\n    // init\n\n    this._name = '';\n    this._timer = new Timer({ interval: 1000 });\n    this._option = { ...DEFAULT_OPTIONS, ...option };\n\n    try {\n      if (this._checkBeforeCreate(_page, name)) {\n        this._name = name;\n        _page[name] = this;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n    this._distributeHandlers();\n  }\n  _distributeHandlers() {\n    this._timer.on('tick', (ms) => {\n      this._option['tick'](Math.round(ms / 1000));\n    });\n    this._timer.on('done', this._option['done']);\n    this._timer.on('statusChanged', this._option['statusChanged']);\n  }\n  _checkBeforeCreate(_page, name) {\n    if (!_page || !name) {\n      throw new Error('Countdown实例化时，必须传入page对象和引用名');\n    }\n    if (_page[name]) {\n      throw new Error('Countdown实例化error： ' + name + ' 已经存在page中');\n    }\n    return true;\n  }\n  start(duration = 60) {\n    this._timer.start(duration * 1000);\n  }\n  pause() {\n    this._timer.pause();\n  }\n  resume() {\n    this._timer.resume();\n  }\n  stop() {\n    this._timer.stop();\n  }\n};exports.default = Countdown\n"]}